// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Player {
  id         Int      @id
  name       String
  position   String
  teamName   String?
  draftPicks DraftPick[]
  // Add relation to PlayerScore
  playerScores PlayerScore[]
}

model Team {
  id         Int      @id @default(autoincrement())
  name       String
  budget     Int      @default(200)  // Added budget field with default value of 200
  draftPicks DraftPick[]
}

model DraftPick {
  id       Int      @id @default(autoincrement())
  team     Team     @relation(fields: [teamId], references: [id])
  teamId   Int
  player   Player?  @relation(fields: [playerId], references: [id])
  playerId Int?
  round    Int
  cost     Int?     // Added cost field to track how much was spent on each pick
  
  @@unique([teamId, round])
}

model DraftStatus {
  id              Int     @id @default(autoincrement())
  isDraftFinished Boolean @default(false)
}

// New model for player scores
model PlayerScore {
  id           Int      @id @default(autoincrement())
  playerId     Int
  player       Player   @relation(fields: [playerId], references: [id])
  round        String   // "Wild Card", "Divisional", "Conference", "Superbowl"
  isDisabled   Boolean  @default(false)
  statusReason String?  // "eliminated", "notPlaying", or null
  score        Int      @default(0)
  scoreData    String?  // JSON data of all player stats
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  @@unique([playerId, round])
}